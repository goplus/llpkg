name: Legacy version maintenance


# label trigger
on:
  label:
    types: [created]



jobs:
  maintenance:
    runs-on: ubuntu-latest
    if: startsWith(github.event.label.name, 'branch:release-branch.')
    steps:
      - name: Checkout to website
        uses: actions/checkout@v4
        with:
          ref: website
          path: .website
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          path: .main
          fetch-depth: 0
      - name: Check out LLGo
        uses: actions/checkout@v4
        with:
          repository: '1351914167/llgo'
          path: .llgo
          ref: get_pip
      - name: Check out LLPyg
        uses: actions/checkout@v4
        with:
          repository: 'toaction/llpyg'
          path: .llpyg
          ref: feat/v1
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.x
      - name: Set up Tool
        run: |
          git clone https://github.com/PengPengPeng717/llpkgstore.git
          cd llpkgstore
          git checkout v3
          go build -o llpkgstore ./cmd/llpkgstore
          sudo mv llpkgstore /usr/local/bin/
      - name: Setup LLGo
        working-directory: .llgo
        run: |
          go install -v ./cmd/...
          export LLGO_ROOT=$PWD
          echo "LLGO_ROOT=$LLGO_ROOT" >> $GITHUB_ENV
          echo "LLGO_RPATH_CHANGE=ON" >> $GITHUB_ENV
      - name: Set up Python environment
        run: |
          echo "GOTOOLCHAIN=go1.24.5" >> $GITHUB_ENV
          export PYTHONHOME=$LLGO_ROOT/python
          export PATH=$PYTHONHOME/bin:$PATH
          export DYLD_LIBRARY_PATH=$PYTHONHOME/lib
          export PKG_CONFIG_PATH=$PYTHONHOME/lib/pkgconfig
          echo "PYTHONHOME=$PYTHONHOME" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
      - name: Setup LLPyg
        working-directory: .llpyg
        run: |
          cd _xtool
          llgo install ./...
          cd ..
          go install -v ./cmd/...
      - name: Copy llpkgstore.json to root
        continue-on-error: true
        run: |
          # ignore error
          ls .website .website/public
          cp .website/public/llpkgstore.json .main
          rm -rf .website
      - name: Run maintenance process
        working-directory: .main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: llpkgstore labelcreate -l "${{ github.event.label.name }}"
